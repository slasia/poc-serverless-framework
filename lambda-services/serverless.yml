org: slasia
app: poc-serverless-framework
service: lambda-services
useDotenv: true
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
functions:
  debug-api:
    handler: dist/debug/handler.handler
    events:
      - http:
          path: debug
          method: get
          cors: true

  email-api:
    handler: dist/src/email-api/handler.handler
    events:
      - http:
          path: email/{proxy+}
          method: any
          cors: true

  user-api:
    handler: dist/user-api/handler.handler
    events:
      - http:
          path: user/
          method: get
          cors: true
          documentation:
            summary: "get test users"
            description: "get detail test user"
            pathParams:
              - name: proxy
                description: "Par√°metro proxy para la ruta del usuario"
                required: true
                schema:
                  type: string
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: "detail user test"
                responseModels:
                  application/json: TestUserModel

  decode-api:
    handler: dist/decode-api/handler.handler
    events:
      - http:
          path: decode
          method: post

  market-api:
    handler: dist/market-api/handler.handler
    events:
      - http:
          path: market
          method: get
    environment:
      DECODE_API_FUNCTION_NAME: "lambda-services-dev-decode-api"

  baseApi:
    handler: dist/base-api/handler.handler
    events:
      - http:
          path: base/
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-openapi-documentation

custom:
  documentation:
    version: "1.0.0"
    title: "My Test API"
    description: "Test API"
    models:
      - name: TestUserModel
        description: "Modelo de datos para un usuario de prueba"
        contentType: "application/json"
        schema:
          type: object
          properties:
            name:
              type: string
            surname:
              type: string
            address:
              type: string
            id:
              type: integer
