org: slasia
app: poc-serverless-framework
service: lambda-services
useDotenv: true
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "lambda:InvokeFunction"
          Resource: "*"

# package:
#   individually: true
#   excludeDevDependencies: true
#   patterns:
#     - '!**' 
#     - 'dist/**' 
#     - '!dist/**/*.map' 
#     - '!dist/**/*.ts' 
#     - 'node_modules/**' 
#     - '!*.ts' 
#     - '!*.yml' 
#     - '!test/**' 
#     - '!tests/**' 
#     - '!*.md' 
#     - '!*.json' 

functions:
  debug-api:
    handler: dist/debug/handler.handler  
    events:
      - http:
          path: debug
          method: get
          cors: true

  email-api:
    handler: dist/src/email-api/handler.handler
    # layers:
    #   - arn:aws:lambda:us-east-1:170372878108:layer:common:5
    events:
      # - http:
      #     path: email
      #     method: get
      #     cors: true
      - http:
          path: email/{proxy+}
          method: any
          cors: true

  user-api:
    handler: dist/src/user-api/handler.handler

    # layers:
    #   - arn:aws:lambda:us-east-1:170372878108:layer:common:5
    events:
      # - http:
      #     path: user
      #     method: get
      #     cors: true
      - http:
          path: user/{proxy+}
          method: any
          cors: true

  decode-api:
    handler: dist/decode-api/handler.handler
    events: 
      - http:
          path: decode
          method: post

  market-api:
    handler: dist/market-api/handler.handler
    events:
      - http:
          path: market
          method: get
    environment:
      DECODE_API_FUNCTION_NAME: "lambda-services-dev-decode-api" 
      
plugins:
  # - serverless-localstack
  - serverless-offline

# custom:
#   localstack:
#     stages:
#       - local
#     host: http://localhost
#     edgePort: 4566
#     autostart: true

